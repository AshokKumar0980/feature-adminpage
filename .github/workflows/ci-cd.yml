name: MARS API CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  JAVA_VERSION: '17'
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Make mvnw executable
      run: chmod +x ./mvnw
        
    - name: Run tests
      run: ./mvnw clean test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/
        retention-days: 30

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Make mvnw executable
      run: chmod +x ./mvnw
        
    - name: Compile project
      run: ./mvnw compile
      
    - name: Run code quality checks
      run: ./mvnw checkstyle:check || echo "‚ö†Ô∏è  Checkstyle warnings found - check logs above"
      continue-on-error: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: maven
        
    - name: Make mvnw executable
      run: chmod +x ./mvnw
        
    - name: Build application
      run: ./mvnw clean package -DskipTests
      
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: mars-api-${{ github.sha }}
        path: target/*.jar
        retention-days: 90

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run dependency check
      run: |
        echo "üîç Running security scan..."
        # Add OWASP dependency check or similar
        echo "Security scan completed"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Download JAR
      uses: actions/download-artifact@v4
      with:
        name: dncs-mars-api
        path: target/
        
    - name: Deploy to staging
      run: |
        echo "üöÄ Deploying to staging environment"
        echo "JAR file: $(ls -la target/)"
        # Add your staging deployment commands here

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Download JAR
      uses: actions/download-artifact@v4
      with:
        name: mars-api-${{ github.sha }}
        path: target/
        
    - name: Deploy to production
      run: |
        echo "üöÄ Deploying to production environment"
        echo "JAR file: $(ls -la target/)"
        # Add your production deployment commands here

  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [test, build, deploy-staging, deploy-production]
    if: always()
    
    steps:
    - name: Notify success
      if: ${{ !contains(needs.*.result, 'failure') }}
      run: |
        echo "‚úÖ Pipeline completed successfully for ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        
    - name: Notify failure
      if: ${{ contains(needs.*.result, 'failure') }}
      run: |
        echo "‚ùå Pipeline failed for ${{ github.ref_name }}"
        echo "Check the logs above for details"